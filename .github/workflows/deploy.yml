name: Deploy Go Application

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build application
      run: |
        CGO_ENABLED=1 go build -ldflags="-s -w" -o myapp ./cmd/timetable

    - name: Prepare deployment package
      run: |
        mkdir -p deployment/{bin,migrations,scripts}
        cp myapp deployment/bin/
        cp -r migrations/* deployment/migrations/
        [ -f .env ] && cp .env deployment/ || true
        
        # Create migration script
        cat > deployment/scripts/run_migrations.sh << 'EOF'
        #!/bin/bash
        set -e
        cd "$(dirname "$0")/.."
        echo "Running migrations..."
        goose -dir migrations sqlite3 "./data/app.db" up
        echo "Migrations completed"
        EOF
        chmod +x deployment/scripts/run_migrations.sh

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Stop app - expect and allow SIGTERM (status 143)
          sudo pkill -f "myapp" 2>/dev/null || true
          sleep 5
          # Force kill only if still running after graceful period
          if pgrep -f "myapp" > /dev/null; then
            echo "Application did not stop gracefully, forcing..."
            sudo pkill -9 -f "myapp" || true
          fi

          # Create backup
          sudo mkdir -p /opt/myapp/{current,backup}
          sudo tar -czf /opt/myapp/backup/backup_$(date +%Y%m%d_%H%M%S).tar.gz /opt/myapp/current/ 2>/dev/null || true
          sudo rm -rf /opt/myapp/new
          sudo mkdir -p /opt/myapp/new

    - name: Upload files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "deployment/*"
        target: "/opt/myapp/new"
        strip_components: 1

    - name: Setup and start application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Switch deployment
          sudo rm -rf /opt/myapp/current
          sudo mv /opt/myapp/new /opt/myapp/current
          
          # Set permissions
          sudo chmod +x /opt/myapp/current/bin/myapp
          sudo chmod +x /opt/myapp/current/scripts/run_migrations.sh
          
          # Run migrations
          export PATH=$PATH:/home/${{ secrets.SSH_USER }}/go/bin
          cd /opt/myapp/current
          ./scripts/run_migrations.sh
          
          # Start application
          cd /opt/myapp/current
          nohup ./bin/myapp > /opt/myapp/logs/app.log 2> /opt/myapp/logs/error.log &
          
          # Verify it's running
          sleep 3
          if pgrep -f "myapp" > /dev/null; then
              echo "Application deployed and started successfully"
          else
              echo "Application may have failed to start. Check logs."
              exit 1
          fi