// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package goqueries

import (
	"database/sql"
	"time"
)

type DefaultUserNotificationParam struct {
	UserID  int64       `db:"user_id"`
	Params  interface{} `db:"params"`
	Foreign interface{} `db:"foreign"`
}

type Event struct {
	ID                 int64       `db:"id"`
	CreatedAt          time.Time   `db:"created_at"`
	UserID             int64       `db:"user_id"`
	Text               string      `db:"text"`
	TaskID             int64       `db:"task_id"`
	TaskType           string      `db:"task_type"`
	NextSend           time.Time   `db:"next_send"`
	FirstSend          time.Time   `db:"first_send"`
	Done               int64       `db:"done"`
	NotificationParams interface{} `db:"notification_params"`
}

type KeyValue struct {
	Key   string      `db:"key"`
	Value interface{} `db:"value"`
}

type Notification struct {
	ID                 int64          `db:"id"`
	CreatedAt          time.Time      `db:"created_at"`
	UserID             int64          `db:"user_id"`
	Text               string         `db:"text"`
	Description        sql.NullString `db:"description"`
	EventID            int64          `db:"event_id"`
	EventType          string         `db:"event_type"`
	SendTime           time.Time      `db:"send_time"`
	Sended             bool           `db:"sended"`
	Done               bool           `db:"done"`
	NotificationParams interface{}    `db:"notification_params"`
	InlineKeyboard     sql.NullString `db:"inline_keyboard"`
	ResendCount        sql.NullInt64  `db:"resend_count"`
	MaxResendCount     sql.NullInt64  `db:"max_resend_count"`
	ResendInterval     sql.NullString `db:"resend_interval"`
	LastResendTime     sql.NullTime   `db:"last_resend_time"`
}

type PeriodicTask struct {
	ID                 int64          `db:"id"`
	CreatedAt          time.Time      `db:"created_at"`
	Text               string         `db:"text"`
	Description        sql.NullString `db:"description"`
	UserID             int64          `db:"user_id"`
	Start              time.Time      `db:"start"`
	SmallestPeriod     int64          `db:"smallest_period"`
	BiggestPeriod      int64          `db:"biggest_period"`
	NotificationParams interface{}    `db:"notification_params"`
}

type SingleTask struct {
	ID                 int64          `db:"id"`
	CreatedAt          time.Time      `db:"created_at"`
	Text               string         `db:"text"`
	Description        sql.NullString `db:"description"`
	UserID             int64          `db:"user_id"`
	Start              time.Time      `db:"start"`
	NotificationParams interface{}    `db:"notification_params"`
}

type Smth2tag struct {
	SmthID int64 `db:"smth_id"`
	TagID  int64 `db:"tag_id"`
	UserID int64 `db:"user_id"`
}

type Tag struct {
	ID        int64     `db:"id"`
	CreatedAt time.Time `db:"created_at"`
	Name      string    `db:"name"`
	UserID    int64     `db:"user_id"`
}

type TgImage struct {
	Filename string `db:"filename"`
	TgFileID int64  `db:"tg_file_id"`
}

type User struct {
	ID             int64 `db:"id"`
	TgID           int64 `db:"tg_id"`
	TimezoneOffset int64 `db:"timezone_offset"`
	TimezoneDst    int64 `db:"timezone_dst"`
}
